# Generated by Django 5.1.4 on 2024-12-10 22:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='StationStop',
            fields=[
                ('station_name', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('address', models.CharField(blank=True, max_length=32, null=True)),
                ('capacity', models.CharField(blank=True, max_length=32, null=True)),
                ('purpose', models.CharField(blank=True, max_length=32, null=True)),
                ('number_of_vehicle', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'station_stop',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('cargo_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('cargo_date', models.DateField(blank=True, null=True)),
                ('note', models.CharField(blank=True, max_length=32, null=True)),
                ('weight', models.CharField(blank=True, max_length=32, null=True)),
                ('receiver', models.CharField(blank=True, max_length=32, null=True)),
                ('sender', models.CharField(blank=True, max_length=32, null=True)),
                ('dim', models.CharField(blank=True, max_length=32, null=True)),
                ('receiver_ssn', models.CharField(blank=True, max_length=32, null=True)),
                ('sender_ssn', models.CharField(blank=True, max_length=32, null=True)),
                ('from_locations', models.CharField(blank=True, max_length=32, null=True)),
                ('receiver_name', models.CharField(blank=True, max_length=32, null=True)),
                ('sender_name', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'cargo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OwnerInfo',
            fields=[
                ('owner_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('dob', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'owner_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('ssi_passport', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('gender', models.CharField(blank=True, max_length=32, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=32, null=True)),
                ('nationality', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'customer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DisabledLanguage',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('reg_id', models.CharField(blank=True, max_length=32, null=True)),
                ('park_id', models.CharField(max_length=32)),
                ('address', models.CharField(blank=True, max_length=32, null=True)),
                ('from_time', models.TimeField(blank=True, null=True)),
                ('to_time', models.TimeField(blank=True, null=True)),
                ('parking_day', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'disabled_language',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('reg_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('brand', models.CharField(blank=True, max_length=32, null=True)),
                ('vehicle_age', models.IntegerField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app1.ownerinfo')),
            ],
            options={
                'db_table': 'vehicle',
                'managed': True,
                'unique_together': {('reg_id', 'owner')},
            },
        ),
        migrations.CreateModel(
            name='PublicVehicle',
            fields=[
                ('maximum_capacity', models.IntegerField(blank=True, null=True)),
                ('vehicle_type', models.CharField(blank=True, max_length=32, null=True)),
                ('model', models.CharField(blank=True, max_length=32, null=True)),
                ('license_plate_no', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('reg', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='app1.vehicle')),
            ],
            options={
                'db_table': 'public_vehicle',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RegularParking',
            fields=[
                ('address', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('parking_type', models.CharField(blank=True, max_length=32, null=True)),
                ('capacity', models.CharField(blank=True, max_length=32, null=True)),
                ('no_of_vehicle', models.IntegerField(unique=True)),
            ],
            options={
                'db_table': 'regular_parking',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TriggerControl',
            fields=[
                ('triggername', models.CharField(db_column='TriggerName', max_length=500, primary_key=True, serialize=False)),
                ('conditions', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trigger_control',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('user_type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app1.ownerinfo')),
                ('cname', models.CharField(blank=True, db_column='Cname', max_length=32, null=True)),
                ('cid', models.CharField(blank=True, db_column='Cid', max_length=32, null=True)),
            ],
            options={
                'db_table': 'company',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('pname', models.CharField(blank=True, db_column='Pname', max_length=32, null=True)),
                ('ssn', models.CharField(blank=True, max_length=32, null=True)),
                ('driving_license', models.CharField(blank=True, max_length=32, null=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app1.ownerinfo')),
            ],
            options={
                'db_table': 'person',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('ssi_passport', models.OneToOneField(db_column='ssi_passport', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app1.customer')),
                ('get_on_time', models.DateTimeField(unique=True)),
                ('depart_location', models.CharField(blank=True, max_length=32, null=True)),
                ('destination', models.CharField(blank=True, max_length=32, null=True)),
                ('get_off_time', models.DateTimeField(blank=True, null=True)),
                ('reg', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app1.publicvehicle', to_field='reg_id', unique=True)),
            ],
            options={
                'db_table': 'passenger',
                'managed': True,
                'unique_together': {('ssi_passport', 'get_on_time', 'reg')},
            },
        ),
        migrations.CreateModel(
            name='PrivateVehicle',
            fields=[
                ('reg', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app1.vehicle')),
                ('plate_number', models.CharField(blank=True, max_length=32, null=True)),
                ('vehicle_type', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'private_vehicle',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('insurance_number', models.IntegerField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(blank=True, max_length=32, null=True)),
                ('insurance_value', models.IntegerField(blank=True, null=True)),
                ('insurance_type', models.CharField(blank=True, max_length=32, null=True)),
                ('started_date', models.DateField(blank=True, null=True)),
                ('expired_date', models.DateField(blank=True, null=True)),
                ('reg', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app1.vehicle')),
            ],
            options={
                'db_table': 'insurance',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('route_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('reg', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app1.publicvehicle', to_field='reg_id')),
            ],
            options={
                'db_table': 'route',
                'managed': True,
                'unique_together': {('route_id', 'reg')},
            },
        ),
        migrations.CreateModel(
            name='DrivingEmployee',
            fields=[
                ('ssi', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('working_date', models.DateField(blank=True, null=True)),
                ('working_hours', models.CharField(blank=True, max_length=32, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('driver_type', models.CharField(blank=True, max_length=32, null=True)),
                ('driving_certifications', models.CharField(blank=True, max_length=32, null=True)),
                ('driving_certification', models.CharField(blank=True, max_length=32, null=True)),
                ('date_taken', models.DateField(blank=True, null=True)),
                ('date_expired', models.DateField(blank=True, null=True)),
                ('license_plate_no', models.ForeignKey(blank=True, db_column='license_plate_no', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app1.publicvehicle')),
            ],
            options={
                'db_table': 'driving_employee',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BusOrder',
            fields=[
                ('station_name', models.OneToOneField(db_column='station_name', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app1.stationstop')),
                ('bus_order', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'bus_order',
                'managed': True,
                'unique_together': {('station_name', 'bus_order')},
            },
        ),
        migrations.CreateModel(
            name='Deliver',
            fields=[
                ('cargo', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app1.cargo')),
                ('reg', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app1.publicvehicle', to_field='reg_id')),
                ('station_name', models.ForeignKey(blank=True, db_column='station_name', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app1.stationstop')),
            ],
            options={
                'db_table': 'deliver',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app1.ownerinfo')),
                ('phone_number', models.CharField(max_length=32, unique=True)),
                ('isp', models.CharField(blank=True, max_length=32, null=True)),
                ('region', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'phone_number',
                'managed': True,
                'unique_together': {('owner', 'phone_number')},
            },
        ),
        migrations.CreateModel(
            name='CustomerHealthIssue',
            fields=[
                ('ssi_passport', models.OneToOneField(db_column='ssi_passport', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app1.customer')),
                ('health_issue', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'customer_health_issue',
                'managed': True,
                'unique_together': {('ssi_passport', 'health_issue')},
            },
        ),
        migrations.CreateModel(
            name='Park',
            fields=[
                ('reg', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app1.privatevehicle')),
                ('address', models.CharField(max_length=32, unique=True)),
            ],
            options={
                'db_table': 'park',
                'managed': True,
                'unique_together': {('reg', 'address')},
            },
        ),
        migrations.CreateModel(
            name='VehicleDamageHistory',
            fields=[
                ('damage_history', models.CharField(max_length=255)),
                ('reg', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app1.vehicle')),
            ],
            options={
                'db_table': 'vehicle_damage_history',
                'managed': True,
                'unique_together': {('reg', 'damage_history')},
            },
        ),
        migrations.CreateModel(
            name='TrafficViolation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('violation_time', models.DateTimeField()),
                ('violation_name', models.CharField(blank=True, max_length=32, null=True)),
                ('violation_address', models.CharField(blank=True, max_length=32, null=True)),
                ('violation_description', models.CharField(blank=True, max_length=255, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.ownerinfo')),
            ],
            options={
                'db_table': 'traffic_violation',
                'managed': True,
                'unique_together': {('owner', 'violation_time')},
            },
        ),
        migrations.CreateModel(
            name='Sell',
            fields=[
                ('buyer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app1.ownerinfo')),
                ('reg', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app1.vehicle')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='sell_seller_set', to='app1.ownerinfo')),
            ],
            options={
                'db_table': 'sell',
                'managed': True,
                'unique_together': {('buyer', 'seller')},
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('parent_ssi_passport', models.OneToOneField(db_column='parent_ssi_passport', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app1.customer')),
                ('child_ssi_passport', models.ForeignKey(db_column='child_ssi_passport', on_delete=django.db.models.deletion.DO_NOTHING, related_name='parent_child_ssi_passport_set', to='app1.customer')),
            ],
            options={
                'db_table': 'parent',
                'managed': True,
                'unique_together': {('parent_ssi_passport', 'child_ssi_passport')},
            },
        ),
        migrations.CreateModel(
            name='GoPass',
            fields=[
                ('route', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app1.route')),
                ('departure_time', models.TimeField(blank=True, null=True)),
                ('arrival_time', models.TimeField(blank=True, null=True)),
                ('station_name', models.ForeignKey(db_column='station_name', on_delete=django.db.models.deletion.DO_NOTHING, to='app1.stationstop')),
            ],
            options={
                'db_table': 'go_pass',
                'managed': True,
                'unique_together': {('route', 'station_name')},
            },
        ),
        migrations.CreateModel(
            name='ParkingTime',
            fields=[
                ('id', models.IntegerField()),
                ('park_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('from_time', models.TimeField(blank=True, null=True)),
                ('to_time', models.TimeField(blank=True, null=True)),
                ('parking_day', models.DateField(blank=True, null=True)),
                ('address', models.ForeignKey(blank=True, db_column='address', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='parkingtime_address_set', to='app1.park', to_field='address')),
                ('reg', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app1.park')),
            ],
            options={
                'db_table': 'parking_time',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Belongs',
            fields=[
                ('ssi_passport', models.OneToOneField(db_column='ssi_passport', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app1.passenger')),
                ('belong_name', models.CharField(max_length=32)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('numbers', models.IntegerField(blank=True, null=True)),
                ('dim', models.CharField(blank=True, max_length=32, null=True)),
                ('get_on_time', models.ForeignKey(db_column='get_on_time', on_delete=django.db.models.deletion.DO_NOTHING, related_name='belongs_get_on_time_set', to='app1.passenger', to_field='get_on_time')),
                ('reg', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='belongs_reg_set', to='app1.passenger', to_field='reg_id')),
            ],
            options={
                'db_table': 'belongs',
                'managed': True,
                'unique_together': {('ssi_passport', 'get_on_time', 'reg', 'belong_name')},
            },
        ),
    ]
